function [evalues,st_eofs,st_pcs,RC]=SSA(data,M,num,Method)%data=mass_total;%M=600;%num=30;%Method=2;[L,N]=size(data);T=GrandMatrix_S(data,M,Method);[eigenvectors,eigenvalues]=eig(T);evalues=diag(eigenvalues);[evalues sort_index]=sort(evalues,'descend');evalues=evalues/sum(evalues);evectors=eigenvectors(:,sort_index);st_eofs=evectors(:,1:num);st_pcs=zeros(N-M+1,num);for t=1:N-M+1        X1=data(t:t+M-1);        st_pcs(t,:)=st_pcs(t,:)+X1*st_eofs(:,:);endRC=zeros(N,num);for k=1:num    k        for t=1:M-1            index1=t:-1:1;            index2=1:t;            RC(t,k)=1/t*st_pcs(index1,k)'*st_eofs(index2,k);        end        for t=M:N-M+1            index1=t:-1:t-M+1;            index2=1:M;            RC(t,k)=1/M*st_pcs(index1,k)'*st_eofs(index2,k);        end        for t=N-M+2:N            index1=N-M+1:-1:t-M+1;            index2=t-N+M:M;            RC(t,k)=1/(N-t+1)*st_pcs(index1,k)'*st_eofs(index2,k);        endend%timeused=toc;%fprintf(1,'M-SSA Computational time    = %f seconds\n', timeused);%end